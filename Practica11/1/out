val comb : 'a -> 'a BinTree.t -> 'a BinTree.t -> 'a BinTree.t = <fun>
val leaf : 'a -> 'a BinTree.t = <fun>
val complete_tree : int -> int BinTree.t = <fun>
val t8 : int BinTree.t = <abstr>
- : int * int = (8, 4)
- : int list = [1; 2; 3; 4; 5; 6; 7; 8]
val t8' : int BinTree.t = <abstr>
- : int list = [1; 3; 2; 7; 6; 5; 4; 8]
- : int list = [1; 2; 4; 8; 5; 3; 6; 7]
- : int list = [8; 4; 2; 5; 1; 6; 3; 7]
- : int list = [8; 4; 5; 2; 6; 7; 3; 1]
- : int = 4
- : int = 7
- : bool = true
- : bool = false
- : bool = false
- : bool = true
- : int list = [8; 5; 6; 7]
- : int list = [6; 7]
- : int list = [5; 8]
val t8b : bool BinTree.t = <abstr>
- : bool list = [false; true; false; true; false; true; false; true]
val t8c : int BinTree.t = <abstr>
- : int list = [1; 4; 3; 8; 5; 12; 7; 16]
val tr : int BinTree.t = <abstr>
- : int list = [4; 8]
val t : int BinTree.t = <abstr>
- : int list = [1; 4; 4; 8; 8]
val ta : int BinTree.t = <abstr>
- : int list = [1; 2; 3; 4; 5]
val tb : int BinTree.t = <abstr>
- : int list = [1; 2]

